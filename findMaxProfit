/* Priska Mohunsingh
 *Say you have an array for which the ith element is the price of a given stock on day i. 
 *If you were only permitted to complete at most one transaction 
 *(ie, buy one and sell one share of the stock), write a C++ function maxProfit(int prices[], 
 *int size) to find the maximum profit.
 */
 
#include <iostream>

using namespace std;
 
void maxProfit(int prices[], int size);

int main()
{
   cout << "--Test for maxProfit--: " << endl;
   int prices[20];
   cout << "Enter how many prices you want to enter(n): ";
   cin >> n;
   cout << "Enter " << n << " prices: ";
   for (int i = 0; i < n; i++)
   {
     cin >> prices[i];
   }
     maxProfit(prices, n);
   cout << endl<<endl;
   
   return 0;
}

void maxProfit(int prices[], int size)
{
   int max = 0;
   for (int i = 0; i < size; i++)
   {
     for (int j = i+1; j < size-1; j++)
     {
       if ( (prices[j] - prices[i]) > max)
       {
          max = prices[j] - prices[i];
       }
     }
 }
   cout << "Maximum profit: " << max << endl;
}
